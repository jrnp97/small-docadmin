# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-08-03 11:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_auto_20180728_1024'),
        ('docapp', '0008_auto_20180803_0845'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ant_Person_familiares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skin_problems', models.BooleanField(default=False, verbose_name='problemas_en_la_piel')),
                ('epilepsia', models.BooleanField(default=False)),
                ('deafness', models.BooleanField(default=False, verbose_name='sordera')),
                ('nasales', models.BooleanField(default=False)),
                ('oculares', models.BooleanField(default=False)),
                ('respiratorias', models.BooleanField(default=False, verbose_name='respiratorias_TBC')),
                ('cardiacas', models.BooleanField(default=False, verbose_name='cardiacas_circulatorias')),
                ('hernias', models.BooleanField(default=False)),
                ('esqueleticas', models.BooleanField(default=False, verbose_name='musculo_esqueleticas')),
                ('traumaticos', models.BooleanField(default=False, verbose_name='fracturas_traumaticos')),
                ('hematologicas', models.BooleanField(default=False)),
                ('asma', models.BooleanField(default=False, verbose_name='alergicas_asma')),
                ('cancerosas', models.BooleanField(default=False)),
                ('diabeticas', models.BooleanField(default=False)),
                ('hiv', models.BooleanField(default=False, verbose_name='HIV')),
                ('cirugias', models.BooleanField(default=False)),
                ('intoxicaciones', models.BooleanField(default=False)),
                ('otras', models.TextField(null=True, verbose_name='otras_enfermedades')),
            ],
        ),
        migrations.CreateModel(
            name='BloodExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rh_information', models.CharField(choices=[('+', 'Positivo'), ('-', 'Negativo')], max_length=1, verbose_name='RH')),
                ('blood_type', models.CharField(choices=[('a+', 'A+'), ('a-', 'A-'), ('b+', 'B+'), ('b-', 'B-'), ('ab+', 'AB+'), ('ab-', 'AB-'), ('o+', 'O+'), ('o-', 'O-')], max_length=5, verbose_name='tipo_sangre')),
            ],
        ),
        migrations.CreateModel(
            name='Exams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vdrl_date', models.DateField()),
                ('vdrl_lab', models.CharField(max_length=100)),
                ('vdrl_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('serologia_date', models.DateField()),
                ('serologia_lab', models.CharField(max_length=100)),
                ('serologia_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('hemograma_date', models.DateField()),
                ('hemograma_lab', models.CharField(max_length=100)),
                ('hemograma_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('uroanalisis_date', models.DateField()),
                ('uroanalisis_lab', models.CharField(max_length=100)),
                ('uroanalisis_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('colesterol_total_date', models.DateField()),
                ('colesterol_total_lab', models.CharField(max_length=100)),
                ('colesterol_total_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('colesterol_hdi_date', models.DateField()),
                ('colesterol_hdi_lab', models.CharField(max_length=100)),
                ('colesterol_hdi_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('trigliceridos_date', models.DateField()),
                ('trigliceridos_lab', models.CharField(max_length=100)),
                ('trigliceridos_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('colesterol_ldi_date', models.DateField()),
                ('colesterol_ldi_lab', models.CharField(max_length=100)),
                ('colesterol_ldi_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('KOH_unias_date', models.DateField()),
                ('KOH_unias_lab', models.CharField(max_length=100)),
                ('KOH_unias_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('frotis_garganta_date', models.DateField()),
                ('frotis_garganta_lab', models.CharField(max_length=100)),
                ('frotis_garganta_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
                ('coprologico_date', models.DateField()),
                ('coprologico_lab', models.CharField(max_length=100)),
                ('coprologico_result', models.CharField(choices=[('n', 'No aplica'), ('a', 'Aplica')], default='n', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='FisicoGeneral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genera_look', models.BooleanField(default=False)),
                ('general_nutrition_state', models.BooleanField(default=False)),
                ('general_color_texture', models.BooleanField(default=False)),
                ('general_appearance', models.BooleanField(default=False)),
                ('general_injuries_skin', models.BooleanField(default=False)),
                ('general_irritant_tolerance', models.BooleanField(default=False)),
                ('general_nails', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('last_modify', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laboratory_forms', to='accounts.LaboratoryProfile')),
                ('exam_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='laboratory', to='docapp.ExamType')),
            ],
            options={
                'db_table': 'laboratory',
            },
        ),
        migrations.CreateModel(
            name='OrganosSentidos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eyes_pupilas', models.BooleanField(default=False, verbose_name='conjuntivitis_pupilas_corneas')),
                ('eyes_deep_vision', models.BooleanField(default=False, verbose_name='vision_profunda')),
                ('eyes_cron_vision', models.BooleanField(default=False, verbose_name='vision_cronomatica')),
                ('eyes_per_vision', models.BooleanField(default=False, verbose_name='vision_periferica')),
                ('eyes_forias', models.BooleanField(default=False)),
                ('oidos_pabellones', models.BooleanField(default=False)),
                ('oidos_otoscopia', models.BooleanField(default=False)),
                ('nariz_tabique_cornetes', models.BooleanField(default=False)),
                ('nariz_senos_paranasales', models.BooleanField(default=False)),
                ('boca_labios_lengua', models.BooleanField(default=False)),
                ('boca_faringe', models.BooleanField(default=False)),
                ('boca_amigdalas', models.BooleanField(default=False)),
                ('boca_dentadura', models.BooleanField(default=False)),
                ('cuello_inspect_neck_moves', models.BooleanField(default=False, verbose_name='inspecion_cuello_movimientos')),
                ('palpacion_cuello_tiroudes', models.BooleanField(default=False)),
                ('pulmones_inspeccion_torax_senos', models.BooleanField(default=False)),
                ('pulmones_palpacion', models.BooleanField(default=False)),
                ('pulmones_auscultacion', models.BooleanField(default=False)),
                ('corazon_ritmo', models.BooleanField(default=False)),
                ('corazon_ruidos_cardiacos', models.BooleanField(default=False)),
                ('corazon_circulacion_periferica', models.BooleanField(default=False)),
                ('abdomen_inspeccion', models.BooleanField(default=False)),
                ('abdomen_palpacion_organos', models.BooleanField(default=False)),
                ('abdomen_anillos_inguinales_hernias', models.BooleanField(default=False)),
                ('genito_unitario_riniones', models.BooleanField(default=False)),
                ('genito_unitario_genitales_externos', models.BooleanField(default=False)),
                ('columna_curvaturas', models.BooleanField(default=False)),
                ('columna_mobilidad', models.BooleanField(default=False)),
                ('columna_tono_musculos_paravertebrales', models.BooleanField(default=False)),
                ('miembros_superiores', models.BooleanField(default=False)),
                ('miembros_inferiores', models.BooleanField(default=False)),
                ('musculos', models.BooleanField(default=False)),
                ('mobilidad_dedos_manos', models.BooleanField(default=False)),
                ('articulaciones', models.BooleanField(default=False)),
                ('esfera_mental', models.BooleanField(default=False)),
                ('sensibilidad_superficial_profunda', models.BooleanField(default=False)),
                ('reflejos', models.BooleanField(default=False)),
                ('otros', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='antecedentpf',
            name='occupa_id',
        ),
        migrations.RemoveField(
            model_name='examphysic',
            name='occupa_id',
        ),
        migrations.RemoveField(
            model_name='antecedentginecoo',
            name='occupa_id',
        ),
        migrations.RemoveField(
            model_name='conclusion',
            name='occupa_id',
        ),
        migrations.RemoveField(
            model_name='habits',
            name='occupa_id',
        ),
        migrations.AddField(
            model_name='antecedentginecoo',
            name='occupational',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='ant_gineco', to='docapp.Occupational'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='conclusion',
            name='occupational',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='conclusiones', to='docapp.Occupational'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='habits',
            name='occupational',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='habits', to='docapp.Occupational'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='occupational',
            name='exam_type',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='occupational', to='docapp.ExamType'),
        ),
        migrations.DeleteModel(
            name='AntecedentPF',
        ),
        migrations.DeleteModel(
            name='ExamPhysic',
        ),
        migrations.AddField(
            model_name='organossentidos',
            name='occupational',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='organos_sistema', to='docapp.Occupational'),
        ),
        migrations.AddField(
            model_name='fisicogeneral',
            name='occupational',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fisico_general', to='docapp.Occupational'),
        ),
        migrations.AddField(
            model_name='exams',
            name='laboratory',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='examanes_laboratorios', to='docapp.Laboratory'),
        ),
        migrations.AddField(
            model_name='bloodexam',
            name='laboratory',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='examen_sangre', to='docapp.Laboratory'),
        ),
        migrations.AddField(
            model_name='ant_person_familiares',
            name='occupational',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ant_familiares', to='docapp.Occupational'),
        ),
    ]
