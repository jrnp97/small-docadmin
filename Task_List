# TODO
- Change label to forms on Person
- Planificar laboratorio

<!-- Accident Model
class JobAccidents(models.Model):
    secuelas = models.TextField(null=False, blank=False)
    tipo = models.CharField(max_length=200, null=False, blank=False)
    atendido = models.BooleanField(default=False, null=False, blank=False)
    calificado = models.BooleanField(default=False, null=False, blank=False)
    fecha = models.DateField(null=False, blank=False)
    description = models.TextField(null=False, blank=False)

    work = models.ForeignKey(AntecedentJobs, on_delete=models.CASCADE, related_name='accidents')

    create_by = models.ForeignKey(ReceptionProfile, on_delete=models.CASCADE)

    def __str__(self):
        return self.tipo

    def as_dict(self):
        return {
            'secuelas': self.secuelas,
            'tipo': self.tipo,
            'atendido': self.atendido,
            'calificado': self.calificado,
            'fecha': self.fecha,
            'description': self.description,
        }
-->

<!-- Accident of Antecedent Section
<section class="accidents">
    {{ formset.form.management_form }}
    <div class="panel panel-bd lobidisable">
        <div class="panel-heading">
            <div class="btn-group"><h2>Accidentes</h2></div>
        </div>

        <div class="panel-body">
            {% for form in accident_formset.forms %}
                <section id="accident-{{ forloop.counter0 }}" class="accident_form">
                    <hr>
                    <h3>Accidente </h3>
                    <hr>
                    {% for field in form %}

                        {% if not forloop.counter|divisibleby:"2" %}
                            <div class="row">
                        {% endif %}

                        {% if field.field.widget.input_type == 'hidden' %}
                            {{ field }}
                        {% else %}

                            <div class="col-sm-6 form-group">

                                <label for="{{ field.id_for_label }}"
                                       class="label {% if field.errors %} label-danger {% else %} label-primary {% endif %}">
                                    {{ field.label }}
                                </label>

                                {% if field.field.widget.input_type == 'select' %}
                                    <select class="form-control {% if field.errors %}  label-danger-outline {% endif %}"
                                            name="{{ field.html_name }}"
                                            id="{{ field.auto_id }}"
                                            size="1">
                                        {% for option in field.field.choices %}
                                            <option value="{{ option.0 }}"
                                                    {% if field.value == option.0 %}
                                                    selected {% endif %}>{{ option.1 }}</option>
                                        {% endfor %}
                                    </select>
                                {% elif field.field.widget.input_type == 'checkbox' %}
                                    {{ field }}
                                {% else %}
                                    <input type="{{ field.field.widget.input_type }}"
                                           class="{% if field.field.widget.format_key == 'DATE_INPUT_FORMATS' %} datepicker {% endif %}
                                                  form-control {% if field.errors %} label-danger-outline {% endif %}"
                                           name="{{ field.html_name }}"
                                           id="{{ field.auto_id }}"
                                           placeholder="Ingrese {{ field.label }}"
                                            {% if field.value %}
                                           value="{{ field.value }}" {% endif %}
                                            {% if field.field.widget.is_required %}
                                           required="" {% endif %}/>
                                {% endif %}

                                {% if field.errors %}
                                    <div class="alert alert-sm alert-danger alert-dismissible m-t-20"
                                         role="alert">
                                        <button type="button" class="close" data-dismiss="alert"
                                                aria-label="Close"><span
                                                aria-hidden="true">Ã—</span></button>
                                        {% for error in field.errors %}
                                            <i class="fa fa-exclamation-circle"></i>
                                            <strong>Error!</strong>
                                            {{ error|escape }}
                                        {% endfor %}
                                    </div>
                                {% endif %}

                            </div>
                        {% endif %}

                        {% if forloop.counter|divisibleby:"2" %}
                            </div>
                        {% endif %}

                    {% endfor %}
                </section>
            {% endfor %}
        </div>
        {% if accident_formset.non_form_errors %}
            <hr>
            {% for error in accident_formset.non_form_errors %}
                {{ error|escape }}
            {% endfor %}
        {% endif %}
    </div>
</section>
-->
<!-- JQuery
{% block scripts %}
    {{ block.super }}
    <script type="application/javascript" src="{% static 'js/jquery.formset.js' %}"></script>
    <script type="text/javascript">
        $('.accident_form ').formset({
            prefix: '{{ accident_formset.prefix }}',
            formCssClass: 'dynamic-formset'
        });
    </script>
{% endblock %}
-->

"""
serologia_date = models.DateField(null=True, blank=True)
    serologia_lab = models.CharField(max_length=100, null=True, blank=True)
    serologia_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    hemograma_date = models.DateField(null=True, blank=True)
    hemograma_lab = models.CharField(max_length=100, null=True, blank=True)
    hemograma_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    uroanalisis_date = models.DateField(null=True, blank=True)
    uroanalisis_lab = models.CharField(max_length=100, null=True, blank=True)
    uroanalisis_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    colesterol_total_date = models.DateField(null=True, blank=True)
    colesterol_total_lab = models.CharField(max_length=100, null=True, blank=True)
    colesterol_total_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    colesterol_hdi_date = models.DateField(null=True, blank=True)
    colesterol_hdi_lab = models.CharField(max_length=100, null=True, blank=True)
    colesterol_hdi_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    trigliceridos_date = models.DateField(null=True, blank=True)
    trigliceridos_lab = models.CharField(max_length=100, null=True, blank=True)
    trigliceridos_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    colesterol_ldi_date = models.DateField(null=True, blank=True)
    colesterol_ldi_lab = models.CharField(max_length=100, null=True, blank=True)
    colesterol_ldi_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    KOH_unias_date = models.DateField(null=True, blank=True)
    KOH_unias_lab = models.CharField(max_length=100, null=True, blank=True)
    KOH_unias_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    frotis_garganta_date = models.DateField(null=True, blank=True)
    frotis_garganta_lab = models.CharField(max_length=100, null=True, blank=True)
    frotis_garganta_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)

    coprologico_date = models.DateField(null=True, blank=True)
    coprologico_lab = models.CharField(max_length=100, null=True, blank=True)
    coprologico_result = models.CharField(max_length=1, choices=RESULTS, default=NO_APLICA, null=True, blank=True)
"""